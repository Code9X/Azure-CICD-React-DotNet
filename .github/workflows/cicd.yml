name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Build Frontend
        working-directory: ./BookingWiz_Web
        run: |
          npm install
          npm install react-router-dom
          CI=false npm run build

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Build Backend
        working-directory: ./BookingWiz_Admin
        run: |
          dotnet restore
          dotnet build --configuration Release

      - name: Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: bookingwizacr.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and Push Frontend Docker Image
        working-directory: ./BookingWiz_Web
        run: |
          docker build -t bookingwizacr.azurecr.io/bookingwiz-web:${{ github.sha }} .
          docker push bookingwizacr.azurecr.io/bookingwiz-web:${{ github.sha }}

      - name: Build and Push Backend Docker Image
        working-directory: ./BookingWiz_Admin
        run: |
          docker build -t bookingwizacr.azurecr.io/bookingwiz-admin:${{ github.sha }} .
          docker push bookingwizacr.azurecr.io/bookingwiz-admin:${{ github.sha }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS Credentials
        run: |
          az aks get-credentials --resource-group myResourceGroup --name bookingwizaks --overwrite-existing

      - name: Ensure Namespaces Exist
        run: |
          kubectl get namespace staging || kubectl create namespace staging
          kubectl get namespace production || kubectl create namespace production

      - name: Assign AcrPull Role to AKS
        run: |
          NODE_RESOURCE_GROUP=$(az aks show --resource-group myResourceGroup --name bookingwizaks --query nodeResourceGroup -o tsv)
          CLIENT_ID=$(az aks show --resource-group myResourceGroup --name bookingwizaks --query "identityProfile.kubeletidentity.clientId" -o tsv)
          az role assignment create --assignee $CLIENT_ID --scope /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/bookingwizacr --role AcrPull || echo "Role already assigned"

      - name: Update Staging Kubernetes Manifests
        run: |
          sed -i "s|image: bookingwizacr.azurecr.io/bookingwiz-web:.*|image: bookingwizacr.azurecr.io/bookingwiz-web:${{ github.sha }}|g" .github/workflows/k8s/staging-frontend.yaml
          sed -i "s|image: bookingwizacr.azurecr.io/bookingwiz-admin:.*|image: bookingwizacr.azurecr.io/bookingwiz-admin:${{ github.sha }}|g" .github/workflows/k8s/staging-backend.yaml

      - name: Deploy to Staging
        run: |
          set -e
          kubectl apply -f .github/workflows/k8s/staging-frontend.yaml -n staging
          kubectl apply -f .github/workflows/k8s/staging-backend.yaml -n staging
          kubectl rollout status deployment/bookingwiz-web -n staging
          kubectl rollout status deployment/bookingwiz-admin -n staging

  deploy-to-production:
    needs: build-and-deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS Credentials
        run: |
          az aks get-credentials --resource-group myResourceGroup --name bookingwizaks --overwrite-existing

      - name: Update Production Kubernetes Manifests
        run: |
          sed -i "s|image: bookingwizacr.azurecr.io/bookingwiz-web:.*|image: bookingwizacr.azurecr.io/bookingwiz-web:${{ github.sha }}|g" .github/workflows/k8s/production-frontend.yaml
          sed -i "s|image: bookingwizacr.azurecr.io/bookingwiz-admin:.*|image: bookingwizacr.azurecr.io/bookingwiz-admin:${{ github.sha }}|g" .github/workflows/k8s/production-backend.yaml

      - name: Deploy to Production
        run: |
          set -e
          kubectl apply -f .github/workflows/k8s/production-frontend.yaml -n production
          kubectl apply -f .github/workflows/k8s/production-backend.yaml -n production
          kubectl rollout status deployment/bookingwiz-web -n production
          kubectl rollout status deployment/bookingwiz-admin -n production
